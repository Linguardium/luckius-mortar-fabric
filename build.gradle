plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id "com.modrinth.minotaur" version "2.+"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		url "https://cursemaven.com"
	}
	//TODO: remove local dir dependency
	flatDir {
		dir("libs")
	}


}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
 	// TODO: fix emi dependency once updated
	modCompileOnly "dev.emi:emi:${project.emi_version}+fabric:api"
	modLocalRuntime "dev.emi:emi:${project.emi_version}+fabric"

	// compile against the JEI API but do not include it at runtime
	//modCompileOnly("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
	// TODO: fix JEI Versioning once updated
	modCompileOnlyApi "curse.maven:jei-238222:5074412"
	//modCompileOnly("mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}")
	// at runtime, use the full JEI jar for Fabric
	//modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${jei_version}")

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

// Add the datagen output to the jar resources.
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

// Create the datagen runs.
loom {
	// ...
	runs {
		datagenClient {
			client()
			name "Data Generation Client"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${project.archives_base_name}"

			ideConfigGenerated = true
			runDir "build/datagen"
		}
	}
	// ...
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN");
	projectId = "vQvHFhtH";
	versionNumber = "${project.version}-${project.minecraft_version}";
	versionName = "[${project.minecraft_version}] Luckius' Mortar ${project.version}";
	uploadFile = remapJar
	loaders = ["fabric", "quilt"]
	dependencies {
		required.project "fabric-api"
		optional.project "qsl"
	}
}